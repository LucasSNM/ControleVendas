// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TDE_VendaAPI.Dados;

namespace TDE_VendaAPI.Migrations
{
    [DbContext(typeof(TDEVendaAPIContext))]
    partial class TDEVendaAPIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("TDE_VendaAPI.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Cpf")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Endereco")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("TDE_VendaAPI.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Cpf")
                        .HasColumnType("text");

                    b.Property<string>("Funcao")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("TDE_VendaAPI.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("Identificacao")
                        .HasColumnType("integer");

                    b.Property<string>("Quantidade")
                        .HasColumnType("text");

                    b.Property<string>("Valor")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("TDE_VendaAPI.Models.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("integer");

                    b.Property<string>("ValorTotal")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("TDE_VendaAPI.Models.ServicoProduto", b =>
                {
                    b.Property<int>("ServicoId")
                        .HasColumnType("integer");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.HasKey("ServicoId", "ProdutoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ServicoProdutos");
                });

            modelBuilder.Entity("TDE_VendaAPI.Models.Produto", b =>
                {
                    b.HasOne("TDE_VendaAPI.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("TDE_VendaAPI.Models.Servico", b =>
                {
                    b.HasOne("TDE_VendaAPI.Models.Cliente", "Cliente")
                        .WithMany("Servico")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TDE_VendaAPI.Models.Funcionario", "Funcionario")
                        .WithMany("Servico")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("TDE_VendaAPI.Models.ServicoProduto", b =>
                {
                    b.HasOne("TDE_VendaAPI.Models.Produto", "Produto")
                        .WithMany("ServicoProdutos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TDE_VendaAPI.Models.Servico", "Servico")
                        .WithMany("ServicoProdutos")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("TDE_VendaAPI.Models.Cliente", b =>
                {
                    b.Navigation("Servico");
                });

            modelBuilder.Entity("TDE_VendaAPI.Models.Funcionario", b =>
                {
                    b.Navigation("Servico");
                });

            modelBuilder.Entity("TDE_VendaAPI.Models.Produto", b =>
                {
                    b.Navigation("ServicoProdutos");
                });

            modelBuilder.Entity("TDE_VendaAPI.Models.Servico", b =>
                {
                    b.Navigation("ServicoProdutos");
                });
#pragma warning restore 612, 618
        }
    }
}
